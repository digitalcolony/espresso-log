---
import type { isRenderTemplateResult } from "astro/runtime/server/render/astro/render-template.js";
import "../styles/styles.css";
// fetch data from google sheet

const res = await fetch(
	"https://script.google.com/macros/s/AKfycbxSRX6FR2A44yUPKY2QbVXp1BsxlPKgPIL1sq96OOYDLxXwkA-pd2wu5yID8ZG3Sjuu/exec"
);
let { data } = await res.json();
// Sort data by timestamp in descending order
data = data.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());

let formatter = new Intl.NumberFormat("en-US", {
	style: "currency",
	currency: "USD",

	// These options are needed to round to whole numbers if that's what you want.
	minimumFractionDigits: 2,
	maximumFractionDigits: 2,
});
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Espresso Log</title>
	</head>
	<body>
		<h1>Espresso Log 2024 ({data.length})</h1>

		<table>
			<thead>
				<tr>
					<th>Date</th>
					<th>Place</th>
					<th>Espresso</th>
					<th>Rating</th>
					<th>Price</th>
				</tr>
			</thead>

			<tbody>
				{
					data.map((item) => (
						<>
							<tr>
								<td>
									{new Date(item.timestamp).toLocaleDateString("en-US", {
										month: "short",
										day: "numeric",
										year: "numeric",
									})}
								</td>
								<td>{item.where}</td>
								<td>{item.espresso}</td>
								<td>{item.rating}</td>
								<td>{formatter.format(item.price)}</td>
							</tr>
						</>
					))
				}
			</tbody>
		</table>
	</body>
</html>
